name: Publish to npm

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.target_commitish }}
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Install dependencies
        run: npm install
      
      - name: Update version from release tag
        run: |
          # Extract version from tag (remove 'v' prefix if present)
          VERSION="${{ github.event.release.tag_name }}"
          VERSION=${VERSION#v}
          
          # Update package.json version to match release tag
          npm version $VERSION --no-git-tag-version
          echo "Updated package.json to version $VERSION"
      
      - name: Update CHANGELOG.md
        run: |
          # Extract version from tag (remove 'v' prefix if present)
          VERSION="${{ github.event.release.tag_name }}"
          VERSION=${VERSION#v}
          TODAY=$(date +"%Y-%m-%d")
          
          # Get release body
          RELEASE_BODY="${{ github.event.release.body }}"
          
          # Create a cleaner way to update the CHANGELOG
          echo -e "\n## [$VERSION] - $TODAY\n\n$RELEASE_BODY\n\n$(tail -n +5 CHANGELOG.md)" > CHANGELOG.md.new
          mv CHANGELOG.md.new CHANGELOG.md
      
      - name: Build
        run: npm run build
      
      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      
      - name: Get target branch
        id: get-branch
        run: |
          BRANCH=${GITHUB_REF#refs/tags/}
          BRANCH=${GITHUB_REF_NAME%/*}
          # Default to main if we can't determine the branch
          if [[ -z "$BRANCH" ]]; then
            BRANCH="main"
          fi
          echo "Target branch: $BRANCH"
          echo "branch=$BRANCH" >> $GITHUB_OUTPUT
      
      - name: Commit and push CHANGELOG and package.json updates
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          # Make sure we're on the right branch
          git checkout ${{ steps.get-branch.outputs.branch || 'main' }}
          
          # Apply changes
          git add CHANGELOG.md
          git add package.json
          
          # Commit and push if there are changes
          git commit -m "Update CHANGELOG.md and package.json for release ${{ github.event.release.tag_name }}" || echo "No changes to commit"
          git push origin ${{ steps.get-branch.outputs.branch || 'main' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
